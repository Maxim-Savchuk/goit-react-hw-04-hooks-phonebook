{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App/App.styled.jsx","components/App/App.jsx","hooks/useLocalStorage.js","index.js"],"names":["Container","styled","div","Form","form","Label","label","Input","input","Button","button","ContactForm","onSubmit","contacts","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","resetForm","preventDefault","find","contact","toLowerCase","alert","type","pattern","title","required","onChange","Filter","filter","Item","li","ContactList","onDeleteContact","map","id","onClick","PhonebookTitle","h1","ContactsTitle","h2","App","key","initialState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","setFilter","normalizedFilter","filterContacts","includes","shortid","generate","target","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5ba0a05.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  width: 320px;\r\n  height: auto;\r\n  padding: 20px 30px;\r\n  border: 2px solid grey;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 200px;\r\n  border-radius: 4px;\r\n  padding: 2px 7px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  margin-top: 7px;\r\n  &:focus {\r\n    border-radius: 4px;\r\n    outline: none;\r\n    border: 2px solid rgb(73, 167, 230);\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 216px;\r\n  margin-top: 20px;\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font-size: 12px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n    1px 4px 4px rgba(0, 0, 0, 0.16), 0px 1px 1px rgba(0, 0, 0, 0.12);\r\n`;","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nimport { Container, Form, Label, Input, Button } from './ContactForm.styled';\r\n\r\nexport const ContactForm = ({ onSubmit, contacts }) => {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const duplicateName = contacts.find(\r\n            contact => contact.name.toLowerCase() === name.toLowerCase());\r\n\r\n        if (duplicateName) {\r\n            alert(`${name} is already in contacts`);\r\n            resetForm();\r\n            return;\r\n        }\r\n\r\n        onSubmit(name, number);\r\n        resetForm();\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Label>\r\n                    Name\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </Label>\r\n                <Label>\r\n                    Number\r\n                    <Input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </Label>\r\n                <Button type=\"submit\">Add contact</Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    contacts: PropTypes.array,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 200px;\r\n  border-radius: 4px;\r\n  padding: 2px 7px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  margin-top: 7px;\r\n  &:focus {\r\n    border-radius: 4px;\r\n    outline: none;\r\n    border: 2px solid rgb(73, 167, 230);\r\n  }\r\n`;","import { Label, Input } from './Filter.styled';\r\n\r\nexport const Filter = ({ filter, onChange }) => {\r\n    return (\r\n        <Label>\r\n            Filter contacts by name\r\n            <Input\r\n                type=\"text\"\r\n                value={filter}\r\n                onChange={onChange} />\r\n        </Label>\r\n    );\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  border: 2px solid grey;\r\n  border-radius: 4px;\r\n  width: 360px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font-size: 12px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n    1px 4px 4px rgba(114, 81, 81, 0.16), 0px 1px 1px rgba(0, 0, 0, 0.12);\r\n`;","import PropTypes from 'prop-types';\r\n\r\nimport { Item, Button } from './ContactList.styled';\r\n\r\nexport const ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {contacts.map(({ id, name, number }) => {\r\n                    return (\r\n                        <Item key={id}>\r\n                            {name}: {number}\r\n                            <Button\r\n                                type=\"button\"\r\n                                onClick={() => onDeleteContact(id)}\r\n                            >Delete</Button>\r\n                        </Item>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 0 50px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const PhonebookTitle = styled.h1`\r\n  font-size: 28px;\r\n`;\r\n\r\nexport const ContactsTitle = styled.h2`\r\n`;","import { useState } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport { ContactForm } from 'components/ContactForm';\r\nimport { Filter } from 'components/Filter';\r\nimport { ContactList } from 'components/ContactList';\r\nimport { useLocalStorage } from 'hooks/useLocalStorage';\r\n\r\nimport { Container, PhonebookTitle, ContactsTitle } from './App.styled';\r\n\r\nexport const App = () => {\r\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const addContact = (name, number) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    setContacts([contact, ...contacts])\r\n  };\r\n\r\n  const deleteContact = contactId => {\r\n    setContacts(contacts.filter(contact => contact.id !== contactId));\r\n  }\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const filterContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter));\r\n\r\n  return (\r\n    <Container>\r\n      <PhonebookTitle>Phonebook</PhonebookTitle>\r\n      <ContactForm\r\n        contacts={filterContacts}\r\n        onSubmit={addContact}\r\n      />\r\n\r\n      <ContactsTitle>Contacts</ContactsTitle>\r\n      <Filter filter={filter} onChange={changeFilter} />\r\n      <ContactList contacts={filterContacts} onDeleteContact={deleteContact} />\r\n    </Container>\r\n  )\r\n}","import { useState, useEffect } from 'react';\r\n\r\nexport const useLocalStorage = (key, initialState) => {\r\n  const [state, setState] = useState(\r\n    () => JSON.parse(window.localStorage.getItem(key)) ?? initialState,\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}